Message = (
  CommandResponse //
  ErrorResponse //
  Event
)

ErrorResponse = {
  ? id: js-uint / null,
  error: ErrorCode,
  message: text,
  ?stacktrace: text,
  Extensible
}

ResultData = (
  BrowsingContextResult //
  EmptyResult //
  NetworkResult //
  ScriptResult //
  SessionResult
)

ErrorCode = ("invalid argument" /
             "invalid session id" /
             "no such alert" /
             "no such frame" /
             "no such handle" /
             "no such node" /
             "no such script" /
             "session not created" /
             "unknown command" /
             "unknown error" /
             "unsupported operation")

js-int = -9007199254740991..9007199254740991
js-uint = 0..9007199254740991
Handle = text
SharedId = text

UndefinedValue = {
  type: "undefined",
}
NullValue = {
  type: "null",
}

StringValue = {
  type: "string",
  value: text,
}

SpecialNumber = "NaN" / "-0" / "Infinity" / "-Infinity"

NumberValue = {
  type: "number",
  value: number / SpecialNumber,
}

session.CapabilitiesRequest = {
  ?alwaysMatch: session.CapabilityRequest,
  ?firstMatch: [*session.CapabilityRequest],
  nested: {
    obj: 123,
    moreNesting: {
        id: js-uint / null,
        like: bool
    }
  }
}

someGroup = {
    ; this is the optional leading param
    ?optional: tstr .default "foobar", ; this is not leading
    ?orientation: ("portrait" / "landscape") .default "portrait",
    ?scale: 0.1..2.0 .default 1.0,
    ?shrinkToFit: bool .default true,
    ?shrinkToFitP: (bool) .default true,
    ?bottom: (float .ge 0.0) .default 1.0,
    ; this is the pageRanges param
    ?pageRanges: [*(js-uint / text)],
    ?foo: tstr .default null,
    ?pointerType: input.PointerType .default "mouse"
}
